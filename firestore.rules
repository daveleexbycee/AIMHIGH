rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is an admin
    function isAdmin() {
      // In a real app, this should check a custom claim or a document in a 'roles' collection.
      // For now, we'll keep it simple and check the admin email.
      return request.auth.token.email == 'agbidave40@gmail.com';
    }

    // Products: Read by anyone, Write (create, update, delete) only by admin.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // User-specific collections like 'cart' and 'wishlist'.
    // Only the authenticated user can access their own documents.
    match /users/{userId}/{collection}/{documentId} {
      allow read, write, delete: if request.auth.uid == userId;
    }

    // Orders:
    // - Authenticated users can create orders.
    // - Only the user who placed the order or an admin can read it.
    // - Only an admin can update (e.g., change status) or delete an order.
    match /orders/{orderId} {
      allow create: if request.auth.uid != null;
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow update, delete: if isAdmin();
    }

    // Reviews:
    // - Anyone can read reviews for a product.
    // - Authenticated users can create reviews.
    // - Users can only update or delete their own reviews.
    // - Admins can delete any review.
    match /products/{productId}/reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
  }
}
